<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wugui.datax.admin.mapper.JobProjectMapper">

    <select id="getProjectListPaging" resultType="com.wugui.datax.admin.entity.JobProject">
        select
        p.*,u.username
        from job_project p
        join job_user u on p.user_id = u.id
        where p.flag=1
        <if test="searchName!=null and searchName != ''">
            and p.name like concat('%', #{searchName}, '%')
        </if>
        order by p.create_time desc
    </select>

    <select id="getProjectListPagingByUserId" resultType="com.wugui.datax.admin.entity.vo.JobProjectVo">
    SELECT a.* FROM
    (
        SELECT
	        p.*,
	        u.username,
	        '创建' AS note
        FROM
	        job_project p
	    JOIN job_user u ON p.user_id = u.id
        WHERE
	        p.flag = 1
	        AND p.user_id = #{userId} UNION ALL
        SELECT
	        p.*,
	        u.username,
	        '参与' AS note
        FROM
	        job_project_user pu
	    LEFT JOIN job_project p ON p.id = pu.project_id
	    LEFT JOIN job_user u ON u.id = pu.user_id
        WHERE
	        u.id = #{userId}) as a
	        <where>
                <if test="searchName!=null and searchName != ''">
                    a.name like concat('%', #{searchName}, '%')
                </if>
            </where>
        GROUP BY a.id
        order by a.create_time desc
    </select>

    <select id="queryDataSourceCountByProject" resultType="int">
        select count(1) from job_jdbc_datasource where project_id in ( SELECT
	        p.id
        FROM
	        job_project p
	    JOIN job_user u ON p.user_id = u.id
        WHERE
	        p.flag = 1
	        AND p.user_id = #{userId} UNION ALL
        SELECT
	       p.id
        FROM
	        job_project_user pu
	    LEFT JOIN job_project p ON p.id = pu.project_id
	    LEFT JOIN job_user u ON u.id = pu.user_id
        WHERE
	        u.id =#{userId})
    </select>

    <select id="queryUserCountByProject" resultType="int">
        SELECT COUNT(DISTINCT d.id)
FROM
	(
	SELECT
		p.id
	FROM
		job_project p
		JOIN job_user u ON p.user_id = u.id
	WHERE
		p.flag = 1
		AND p.user_id=#{userId}
		 UNION ALL
	SELECT
		p.id
	FROM
		job_project_user pu
		LEFT JOIN job_project p ON p.id = pu.project_id
		LEFT JOIN job_user u ON u.id = pu.user_id
		WHERE u.id=#{userId}
	) as a
	LEFT JOIN job_project_user as b ON a.id=b.project_id
	LEFT JOIN job_user as d ON b.user_id = d.id
    </select>

    <select id="queryTaskCountByProject" resultType="int">
        SELECT
	count( 1 )
FROM
	job_info
WHERE
	project_id IN (
	SELECT
	       p.id
        FROM
	        job_project p
	    JOIN job_user u ON p.user_id = u.id
        WHERE
	        p.flag = 1
	        AND p.user_id = #{userId} UNION ALL
        SELECT
	        p.id
        FROM
	        job_project_user pu
	    LEFT JOIN job_project p ON p.id = pu.project_id
	    LEFT JOIN job_user u ON u.id = pu.user_id
        WHERE
	        u.id = #{userId})
    </select>

    <select id="getItemTaskDistribution" resultType="map">
        SELECT
	p.name,
	COUNT( DISTINCT p.id ) num
FROM
	(
	SELECT
		p.*
	FROM
		job_project p
		JOIN job_user u ON p.user_id = u.id
	WHERE
		p.flag = 1
		AND p.user_id = #{userId} UNION ALL
	SELECT
		p.*
	FROM
		job_project_user pu
		LEFT JOIN job_project p ON p.id = pu.project_id
		LEFT JOIN job_user u ON u.id = pu.user_id
	WHERE
		u.id = #{userId}
	)as p
	LEFT JOIN job_info i ON p.id = i.project_id
	WHERE `name` is not NULL AND i.id is not NULL
 GROUP BY p.id
    </select>

    <select id="getItemTaskRunStateDistribution" resultType="map">
        SELECT
	p.NAME name,
	i.trigger_status STATUS,
	DATE_FORMAT( add_time, '%Y-%m-%d' ) date,
	COUNT( DISTINCT p.id) num
FROM
	(
	SELECT
		p.*
	FROM
		job_project p
		JOIN job_user u ON p.user_id = u.id
	WHERE
		p.flag = 1
		AND p.user_id = #{userId} UNION ALL
	SELECT
		p.*
	FROM
		job_project_user pu
		LEFT JOIN job_project p ON p.id = pu.project_id
		LEFT JOIN job_user u ON u.id = pu.user_id
	WHERE
		u.id = #{userId}
	)as p
	LEFT JOIN job_info i ON p.id = i.project_id
WHERE
`name` IS NOT NULL AND i.id is not NULL
	 GROUP BY p.name,i.trigger_status,date
    </select>

    <select id="getItemTaskTypeDistribution" resultType="map">
        SELECT
	p.NAME name,
	i.job_type type,
	COUNT( DISTINCT p.id ) num
FROM
	(
	SELECT
		p.*
	FROM
		job_project p
		JOIN job_user u ON p.user_id = u.id
	WHERE
		p.flag = 1
		AND p.user_id = #{userId} UNION ALL
	SELECT
		p.*
	FROM
		job_project_user pu
		LEFT JOIN job_project p ON p.id = pu.project_id
		LEFT JOIN job_user u ON u.id = pu.user_id
	WHERE
		u.id = #{userId}
	)as p
	LEFT JOIN job_info i ON p.id = i.project_id
WHERE `name` is not NULL  and i.id is not NULL
GROUP BY p.name,i.job_type
    </select>

    <select id="getTaskExecutorDistribution" resultType="map">
        SELECT
	i.executor_handler name,
	COUNT( DISTINCT i.id) num
FROM
	(
	SELECT
		p.*
	FROM
		job_project p
		JOIN job_user u ON p.user_id = u.id
	WHERE
		p.flag = 1
		AND p.user_id = #{userId} UNION ALL
	SELECT
		p.*
	FROM
		job_project_user pu
		LEFT JOIN job_project p ON p.id = pu.project_id
		LEFT JOIN job_user u ON u.id = pu.user_id
	WHERE
		u.id = #{userId}
	)as p
	LEFT JOIN job_info i ON p.id = i.project_id
	WHERE i.id is not NULL
GROUP BY
	i.executor_handler
    </select>

    <select id="count" resultType="java.lang.Integer">
          SELECT count(DISTINCT id) FROM
    (
        SELECT
	        p.*
        FROM
	        job_project p
	    JOIN job_user u ON p.user_id = u.id
        WHERE
	        p.flag = 1
	        AND p.user_id = #{userId} UNION ALL
        SELECT
	        p.*
        FROM
	        job_project_user pu
	    LEFT JOIN job_project p ON p.id = pu.project_id
	    LEFT JOIN job_user u ON u.id = pu.user_id
        WHERE
	        u.id =#{userId}) as a
					WHERE a.id is NOT NULL
    </select>

    <select id="projectIds" resultType="java.lang.Integer">
		SELECT a.id FROM
		(
		SELECT
		p.id
		FROM
		job_project p
		JOIN job_user u ON p.user_id = u.id
		WHERE
		p.flag = 1
		AND p.user_id = #{userId} UNION ALL
		SELECT
		p.id
		FROM
		job_project_user pu
		LEFT JOIN job_project p ON p.id = pu.project_id
		LEFT JOIN job_user u ON u.id = pu.user_id
		WHERE
		u.id = #{userId}) as a
		WHERE a.id is NOT NULL
		GROUP BY a.id
    </select>
</mapper>
